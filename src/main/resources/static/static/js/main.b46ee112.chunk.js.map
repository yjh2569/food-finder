{"version":3,"sources":["routes/Home.js","routes/Recommend.js","App.js","reportWebVitals.js","index.js"],"names":["Home","react_default","a","createElement","className","id","react_router_dom","to","Recommend","_useState","useState","_useState2","Object","slicedToArray","type","setType","_useState3","_useState4","taste","setTaste","_useState5","_useState6","res","setRes","onClickType","e","target","value","onClickTaste","foodMap","Map","korMap","japMap","chiMap","bunMap","wesMap","set","useEffect","get","onClick","Math","floor","random","length","App","react_router","path","element","src_routes_Home","src_routes_Recommend","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b46ee112.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h1 id=\"home_title\">식사 메뉴를 골라드립니다!</h1>\r\n            <Link to=\"recommend\" id=\"start_button\">시작!</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect} from 'react';\r\nimport './Recommend.css';\r\n\r\nconst Recommend = () => {\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [taste, setTaste] = useState(\"\");\r\n    const [res, setRes] = useState([]);\r\n\r\n    const onClickType = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const onClickTaste = (e) => {\r\n        setTaste(e.target.value);\r\n    }\r\n\r\n    const changeMenu = (e) => {\r\n        setRes(foodMap.get(type).get(taste));\r\n    }\r\n\r\n    const initialize = (e) => {\r\n        setType(\"\");\r\n        setTaste(\"\");\r\n    }\r\n\r\n    const foodMap = new Map();\r\n\r\n    const korMap = new Map();\r\n    const japMap = new Map();\r\n    const chiMap = new Map();\r\n    const bunMap = new Map();\r\n    const wesMap = new Map();\r\n\r\n    korMap.set(\"meat\", [\"족발/보쌈\", \"삼겹살\", \"갈비찜\", \"찜닭\", \"곱창/대창\", \"닭갈비\", \"육회\", \"닭볶음탕\", \"돼지불백\", \"게장\", \"생선구이\"]);\r\n    korMap.set(\"spicy\", [\"불닭\", \"쭈꾸미\", \"닭발\", \"매운 등갈비찜\", \"불족발\", \"닭갈비\", \"닭볶음탕\", \"아구찜\"]);\r\n    korMap.set(\"relaxing\", [\"국밥\", \"감자탕\", \"비빔밥\", \"찜닭\", \"부대찌개\", \"김치찜\", \"김치찌개\", \"갈비탕\", \"된장찌개\", \"아구찜\", \"죽\", \"짜글이\", \"미역국\"]);\r\n\r\n    japMap.set(\"meat\", [\"회\", \"초밥\", \"돈까스\", \"돈부리\", \"규동\", \"라멘\", \"텐동\", \"부타동\", \"연어\"]);\r\n    japMap.set(\"spicy\", [\"카레\", \"라멘\"]);\r\n    japMap.set(\"relaxing\", [\"라멘\", \"규동\", \"부타동\", \"텐동\", \"우동\", \"카레\", \"모밀\"]);\r\n\r\n    chiMap.set(\"meat\", [\"탕수육\", \"깐풍기\", \"마라샹궈\", \"차돌짬뽕\", \"만두\", \"난자완스\", \"라조육\", \"깐쇼새우\", \"꿔바로우\"]);\r\n    chiMap.set(\"spicy\", [\"마라탕\", \"짬뽕\", \"사천짜장\", \"마파두부\", \"마라샹궈\"]);\r\n    chiMap.set(\"relaxing\", [\"짜장면\", \"볶음밥\", \"짬뽕\", \"마라탕\", \"마라샹궈\", \"탕수육\", \"만두\"]);\r\n\r\n    bunMap.set(\"meat\", [\"튀김\", \"순대\", \"만두\", \"오뎅\"]);\r\n    bunMap.set(\"spicy\", [\"떡볶이\", \"라면\", \"육개장\"]);\r\n    bunMap.set(\"relaxing\", [\"우동\", \"김밥\", \"떡볶이\", \"라면\", \"오뎅\", \"육개장\"]);\r\n\r\n    wesMap.set(\"meat\", [\"치킨\", \"피자\", \"스테이크\", \"버거\"]);\r\n    wesMap.set(\"spicy\", [\"파스타\", \"치킨\"]);\r\n    wesMap.set(\"relaxing\", [\"피자\", \"미국식덮밥\", \"파스타\", \"필라프\", \"버거\"]);\r\n\r\n    foodMap.set(\"한식\", korMap);\r\n    foodMap.set(\"일식\", japMap);\r\n    foodMap.set(\"중식\", chiMap);\r\n    foodMap.set(\"분식\", bunMap);\r\n    foodMap.set(\"양식\", wesMap);\r\n\r\n    useEffect(() => {\r\n        if (type !== \"\" && taste !== \"\") {\r\n            setRes(foodMap.get(type).get(taste));\r\n        }\r\n    }, [type, taste])\r\n\r\n    return (\r\n        <div className='recommend'>\r\n           {(type === \"\") ? (\r\n               <div className=''>\r\n                   <h2 className='recommend-question'>먹고 싶은 음식 종류는?</h2>\r\n                   <div className='choose-buttons type'>\r\n                        <button onClick={onClickType} value=\"한식\" className='choose-button'>한식</button>\r\n                        <button onClick={onClickType} value=\"일식\" className='choose-button'>일식</button>\r\n                        <button onClick={onClickType} value=\"중식\" className='choose-button'>중식</button>\r\n                        <button onClick={onClickType} value=\"분식\" className='choose-button'>분식</button>\r\n                        <button onClick={onClickType} value=\"양식\" className='choose-button'>양식</button>\r\n                   </div>\r\n                   \r\n               </div>\r\n           ) : (\r\n               (taste === \"\") ? (\r\n                    <div>\r\n                        <h2 className='recommend-question'>오늘은 이런게 땡긴다!</h2>\r\n                        <div className=\"choose-buttons taste\">\r\n                            <button onClick={onClickTaste} value=\"meat\" className='choose-button'> 무조건 고기!</button>\r\n                            <button onClick={onClickTaste} value=\"spicy\" className='choose-button'>매운 게 땡긴다!</button>\r\n                            <button onClick={onClickTaste} value=\"relaxing\" className='choose-button'>든든하고 속풀리는 음식!</button>\r\n                        </div>\r\n                    </div>\r\n               ) : (\r\n                    <div>\r\n                        <h1 id=\"recommend-result\">{res[Math.floor(Math.random() * res.length)]} 어때요?</h1>\r\n                        <div id='rechoice-button-div'>\r\n                            <button onClick={changeMenu} className=\"choose-button\">다른 거!</button>\r\n                            <button onClick={initialize} className=\"choose-button\">다시 선택</button>\r\n                        </div>\r\n                    </div>\r\n               )\r\n           )} \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Recommend;","\nimport React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Recommend from './routes/Recommend';\nimport \"./App.css\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home/>} />\n            <Route path=\"/recommend\" element={<Recommend/>} />\n          </Routes>  \n        </BrowserRouter>\n    );  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}