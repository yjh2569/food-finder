plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.yjh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
	implementation 'org.apache.commons:commons-dbcp2:2.9.0'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	implementation 'org.springframework.boot:spring-boot-devtools:2.6.7'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation 'mysql:mysql-connector-java:8.0.29'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	
	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/frontend"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "copyReactBuildFiles"
}

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "audit", "fix"
		commandLine "npm", "install"
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}